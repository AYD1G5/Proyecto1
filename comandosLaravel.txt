*** HACER UNA PRUEBA ***
php artisan make:test MaterialDeApoyo --unit

*** PROBAR TODAS LAS PRUEBAS ****
vendor\bin\phpunit

*** CREAR TABLAS ****
php artisan make:migration create_tareas_table

*** CREAR CONTROLADORES ***
php artisan make:controller UploadFileController --resource




****************** CONFIGURAR CHAT *****************
https://pusher.com/tutorials/chat-laravel/

// .env 
BROADCAST_DRIVER=pusher

Before we start using Laravel event broadcasting, 
we first need to register the
 App\Providers\BroadcastServiceProvider. 
 Open config/app.php and uncomment the following line in the providers array.

// App\Providers\BroadcastServiceProvider

composer require pusher/pusher-php-server
composer require pusher/pusher-php-server "~3.0"

// Don't add your credentials here!
// config/broadcasting.php

'pusher' => [
      'driver' => 'pusher',
      'key' => env('PUSHER_APP_KEY'),
      'secret' => env('PUSHER_APP_SECRET'),
      'app_id' => env('PUSHER_APP_ID'),
      'options' => [
          'cluster' => 'us2',
          'encrypted' => true,
      ],
  ],


If you don't have one already, create a free Pusher account at https://pusher.com/signup then login to your dashboard and create an app.

// .env

PUSHER_APP_ID=593404
PUSHER_APP_KEY=3c3e632dd53194ed62c0
PUSHER_APP_SECRET=012073c866538b570086
PUSHER_APP_CLUSTER=us2


npm install
npm i ajv
npm i imagemin
npm install --save laravel-echo pusher-js
npm run watch

// resources/assets/js/bootstrap.js

import Echo from "laravel-echo"

window.Echo = new Echo({
    broadcaster: 'pusher',
    key: '3c3e632dd53194ed62c0',
    cluster: 'us2',
    encrypted: true
});